#=================================================

# https://github.com/P3TERX/Actions-OpenWrt

# Description: Build OpenWrt using GitHub Actions

# Lisence: MIT

# Author: P3TERX

# Blog: https://p3terx.com

#=================================================



name: OpenWrtk3T



on:

  release:

    types: [published]

  push:

    branches:

      - dev-lean-lede

    paths:

      - '.config'

#  schedule:

#    - cron: 0 8 * * 5

  watch:

    types: [started]



env:

  REPO_URL: https://github.com/coolsnowwolf/lede

  REPO_BRANCH: master

  CONFIG_FILE: .config

  DIY_SH: diy.sh

  FREE_UP_DISK: false

  SSH_ACTIONS: true

  UPLOAD_BIN_DIR: false

  UPLOAD_FIRMWARE: true

  TZ: Asia/Shanghai



jobs:

  build:

    runs-on: ubuntu-latest



    steps:

    - name: Checkout

      uses: actions/checkout@master



    - name: Initialization environment

      env:

        DEBIAN_FRONTEND: noninteractive

      run: |

        sudo swapoff /swapfile

        sudo rm -rf /swapfile /etc/apt/sources.list.d/*

        sudo -E apt-get -qq update

        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler

        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: Free up disk space

      if: env.FREE_UP_DISK == 'true'

      env:

        DEBIAN_FRONTEND: noninteractive

      run: |

        sudo rm -rf /usr/share/dotnet

        docker rmi `docker images -q`

        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*

        sudo -E apt-get -qq autoremove --purge

        sudo -E apt-get -qq clean

    - name: Clone source code

      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: ssr

      run: cd openwrt/package && git clone  https://github.com/fw876/helloworld

    - name: clean

      run:  cd openwrt && ./scripts/feeds clean

    - name: Update feeds

      run: cd openwrt && ./scripts/feeds update -a



    - name: Install feeds

      run: cd openwrt && ./scripts/feeds install -a



    - name: Load custom configuration

      run: |

        cd openwrt

        make defconfig

    - name: SSH connection to Actions

      uses: P3TERX/debugger-action@master

      if: env.SSH_ACTIONS == 'true'



    - name: Download package

      id: package

      run: |

        cd openwrt

        make download -j8

        find dl -size -1024c -exec ls -l {} \;

        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware

      id: compile

      run: |

        cd openwrt

        echo -e "$(nproc) thread compile"

        make -j$(nproc) || make -j1 V=s

        echo "::set-output name=status::success"

        

        -name: Assemble artifact

        run: |

          rm -rf ./artifact/

          mkdir -p ./artifact/

          find ./bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/

          find ./bin/targets/ -name "*vmdk*" | xargs -i mv -f {} ./artifact/

          find ./bin/targets/ -name "*efi*img*" | xargs -i mv -f {} ./artifact/

          find ./bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/

          find ./bin/targets/ -name "*k3*" | xargs -i mv -f {} ./artifact/

          mv .config ./artifact/

        - name: Upload artifact

        uses: actions/upload-artifact@master

        with:

          name: OpenWrt firmware

          path: ./artifact/

